# Generated by Django 5.0.10 on 2024-12-09 13:31

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('books', '0001_initial'),
        ('pghistory', '0006_delete_aggregateevent'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('title', models.CharField(max_length=300)),
                ('summary', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CopyEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('acquisition_date', models.DateField(auto_now_add=True)),
                ('condition', models.CharField(choices=[('new', 'New'), ('good', 'Good'), ('worn', 'Worn'), ('damaged', 'Damaged')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EditionEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('publication_date', models.DateField()),
                ('isbn', models.CharField(blank=True, max_length=13)),
                ('page_count', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FineEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoanEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('loan_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('on_loan', 'On Loan'), ('returned', 'Returned'), ('overdue', 'Overdue')], default='on_loan', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='book',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "books_bookevent" ("id", "language_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "summary", "title") VALUES (NEW."id", NEW."language_id", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."summary", NEW."title"); RETURN NULL;', hash='d949e1052dda4394d31c9f3983117eb665c39698', operation='INSERT', pgid='pgtrigger_insert_insert_6f375', table='books_book', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='book',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "books_bookevent" ("id", "language_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "summary", "title") VALUES (NEW."id", NEW."language_id", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."summary", NEW."title"); RETURN NULL;', hash='f921ca8225444cb9080aae84862de910357b4994', operation='UPDATE', pgid='pgtrigger_update_update_346d4', table='books_book', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='copy',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "books_copyevent" ("acquisition_date", "condition", "edition_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."acquisition_date", NEW."condition", NEW."edition_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."id"); RETURN NULL;', hash='e8690b9dcf2264d74b3d57298f38b466006251a2', operation='INSERT', pgid='pgtrigger_insert_insert_171bd', table='books_copy', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='copy',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "books_copyevent" ("acquisition_date", "condition", "edition_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."acquisition_date", NEW."condition", NEW."edition_id", NEW."id", _pgh_attach_context(), NOW(), \'update\', NEW."id"); RETURN NULL;', hash='0a8211e486c7a47da8ee024a9c5274e3390aae9a', operation='UPDATE', pgid='pgtrigger_update_update_bc91b', table='books_copy', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='edition',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "books_editionevent" ("book_id", "id", "isbn", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "publication_date", "publisher_id") VALUES (NEW."book_id", NEW."id", NEW."isbn", NEW."page_count", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."publication_date", NEW."publisher_id"); RETURN NULL;', hash='c01a3cdae09ab9b7814198cb3e799279db9fe968', operation='INSERT', pgid='pgtrigger_insert_insert_bfa0d', table='books_edition', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='edition',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "books_editionevent" ("book_id", "id", "isbn", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "publication_date", "publisher_id") VALUES (NEW."book_id", NEW."id", NEW."isbn", NEW."page_count", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."publication_date", NEW."publisher_id"); RETURN NULL;', hash='ae9f2155635f77506b1d05c790b9629114947c37', operation='UPDATE', pgid='pgtrigger_update_update_b5dbc', table='books_edition', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='fine',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "books_fineevent" ("amount", "id", "loan_id", "paid", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."amount", NEW."id", NEW."loan_id", NEW."paid", _pgh_attach_context(), NOW(), \'insert\', NEW."id"); RETURN NULL;', hash='3b00d9fcf1f47ed329ed8eb9a37aaf16119116eb', operation='INSERT', pgid='pgtrigger_insert_insert_7e847', table='books_fine', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='fine',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "books_fineevent" ("amount", "id", "loan_id", "paid", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."amount", NEW."id", NEW."loan_id", NEW."paid", _pgh_attach_context(), NOW(), \'update\', NEW."id"); RETURN NULL;', hash='a23a7094601378bb1760debfe29f81db869bca72', operation='UPDATE', pgid='pgtrigger_update_update_a6221', table='books_fine', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='loan',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "books_loanevent" ("copy_id", "due_date", "id", "loan_date", "patron_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "return_date", "status") VALUES (NEW."copy_id", NEW."due_date", NEW."id", NEW."loan_date", NEW."patron_id", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."return_date", NEW."status"); RETURN NULL;', hash='2ca17938ad62a2ec8a6f8147772522a036493c23', operation='INSERT', pgid='pgtrigger_insert_insert_03b10', table='books_loan', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='loan',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "books_loanevent" ("copy_id", "due_date", "id", "loan_date", "patron_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "return_date", "status") VALUES (NEW."copy_id", NEW."due_date", NEW."id", NEW."loan_date", NEW."patron_id", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."return_date", NEW."status"); RETURN NULL;', hash='ea34d61e7adf948b07cb49b1ec5585a67ae083cf', operation='UPDATE', pgid='pgtrigger_update_update_be1a3', table='books_loan', when='AFTER')),
        ),
        migrations.AddField(
            model_name='bookevent',
            name='language',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.language'),
        ),
        migrations.AddField(
            model_name='bookevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='bookevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='books.book'),
        ),
        migrations.AddField(
            model_name='copyevent',
            name='edition',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.edition'),
        ),
        migrations.AddField(
            model_name='copyevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='copyevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='books.copy'),
        ),
        migrations.AddField(
            model_name='editionevent',
            name='book',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.book'),
        ),
        migrations.AddField(
            model_name='editionevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='editionevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='books.edition'),
        ),
        migrations.AddField(
            model_name='editionevent',
            name='publisher',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.publisher'),
        ),
        migrations.AddField(
            model_name='fineevent',
            name='loan',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.loan'),
        ),
        migrations.AddField(
            model_name='fineevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='fineevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='books.fine'),
        ),
        migrations.AddField(
            model_name='loanevent',
            name='copy',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.copy'),
        ),
        migrations.AddField(
            model_name='loanevent',
            name='patron',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='books.patron'),
        ),
        migrations.AddField(
            model_name='loanevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='loanevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='books.loan'),
        ),
    ]
